{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Metabase Card Parameters Schema",
  "description": "JSON schema for the 'parameters' argument of POST /api/card and PUT /api/card/{id} endpoints.\n\nIMPORTANT: Parameters are primarily auto-generated by Metabase from template tags in native SQL queries. While you can include this field in API requests, Metabase will typically regenerate parameters automatically based on the dataset_query.native.template-tags content.\n\nTemplate Tag Types (visible in UI - Field Filter disabled):\n- Text: Creates 'category' parameter type for basic text input with autocomplete\n- Number: Creates 'number/=' parameter type for numeric input\n- Date: Creates 'date/single' parameter type for date picker\n\nUsers set template tag types in the SQL editor, and Metabase automatically generates corresponding parameters with appropriate types and targets.",
  "type": "array",
  "items": {
    "type": "object",
    "required": ["id", "type"],
    "properties": {
      "id": {
        "type": "string",
        "minLength": 1,
        "description": "Unique identifier for the parameter. Must be a non-blank string."
      },
      "type": {
        "type": "string",
        "enum": [
          "category",
          "number/=", 
          "date/single"
        ],
        "description": "The parameter type determining the UI widget and behavior. Generated automatically from template tag types:\n- category: From 'text' template tags ({{variable}})\n- number/=: From 'number' template tags\n- date/single: From 'date' template tags"
      },
      "name": {
        "type": "string",
        "description": "Human-readable name for the parameter displayed in the UI."
      },
      "slug": {
        "type": "string",
        "description": "URL-friendly identifier for the parameter."
      },
      "target": {
        "description": "Specifies what the parameter targets. With field filters disabled, only variable targets are used.",
        "type": "array",
        "items": [
          {
            "const": "variable"
          },
          {
            "type": "array",
            "items": [
              {
                "const": "template-tag"
              },
              {
                "type": "string",
                "description": "Name of the template tag"
              }
            ],
            "minItems": 2,
            "maxItems": 2
          }
        ],
        "minItems": 2,
        "maxItems": 2
      },
      "default": {
        "description": "Default value for the parameter. Type depends on parameter type.",
        "anyOf": [
          { "type": "string" },
          { "type": "number" },
          { "type": "boolean" },
          { "type": "array" },
          { "type": "null" }
        ]
      },
      "required": {
        "type": "boolean",
        "default": false,
        "description": "Whether the parameter is required and must have a value."
      },
      "values_query_type": {
        "type": "string",
        "enum": ["list", "search", "none"],
        "description": "How parameter values should be queried and presented to users."
      },
      "values_source_type": {
        "anyOf": [
          {
            "type": "string",
            "enum": ["static-list", "card"]
          },
          {
            "type": "null"
          }
        ],
        "description": "Source type for parameter values. Null means default behavior."
      },
      "values_source_config": {
        "type": "object",
        "properties": {
          "values": {
            "type": "array",
            "description": "Static list of values for static-list source type.",
            "items": {
              "anyOf": [
                { "type": "string" },
                { "type": "number" },
                { "type": "boolean" },
                {
                  "type": "array",
                  "description": "Parameter value with optional human-readable label",
                  "minItems": 1,
                  "maxItems": 2
                }
              ]
            }
          },
          "card_id": {
            "type": "integer",
            "minimum": 1,
            "description": "ID of the card to use as values source for card source type."
          },
          "value_field": {
            "type": "array",
            "description": "Field reference for the value column when using card source."
          },
          "label_field": {
            "type": "array",
            "description": "Field reference for the label column when using card source."
          }
        },
        "additionalProperties": false,
        "description": "Configuration for parameter value sources."
      },
      "sectionId": {
        "type": "string",
        "minLength": 1,
        "description": "Section identifier for grouping parameters in the UI."
      },
      "temporal_units": {
        "type": "array",
        "items": {
          "type": "string",
          "enum": [
            "minute",
            "hour", 
            "day",
            "week",
            "month",
            "quarter",
            "year",
            "minute-of-hour",
            "hour-of-day",
            "day-of-week",
            "day-of-month",
            "day-of-year",
            "week-of-year",
            "month-of-year",
            "quarter-of-year"
          ]
        },
        "description": "Available temporal units for date/time parameters."
      },
      "options": {
        "type": "object",
        "properties": {
          "case-sensitive": {
            "type": "boolean",
            "description": "Whether string comparisons should be case-sensitive."
          }
        },
        "additionalProperties": false,
        "description": "Additional options for parameter behavior."
      },
      "filteringParameters": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "description": "IDs of other parameters that filter the values of this parameter."
      },
      "isMultiSelect": {
        "type": "boolean",
        "description": "Whether the parameter allows multiple value selection."
      },
      "mappings": {
        "description": "Legacy mappings field - exact structure varies and is deprecated."
      }
    },
    "additionalProperties": false,
    "description": "A parameter object that defines an interactive input control for the card. Parameters are automatically generated from template tags in native SQL queries.\n\nWith Field Filters Disabled - Template Tag to Parameter Type Mapping:\n- text → category (text input with autocomplete)\n- number → number/= (numeric input)\n- date → date/single (date picker)\n\nAll parameters use variable targets that link to template tags. The 'type' field is automatically determined by Metabase based on the template tag type and cannot be manually set via the API."
  }
}